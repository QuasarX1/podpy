import numpy as np
from matplotlib import pyplot as plt

data = {

"synthetic": np.array([
[-1, -3.0614754098360653],
[-0.9164648910411624, -3.0614754098360653],
[-0.8329297820823246, -3.0614754098360653],
[-0.7312348668280872, -3.0614754098360657],
[-0.631355932203389, -3.0562060889929743],
[-0.5314769975786922, -3.0526932084309135],
[-0.41888619854721565, -3.0526932084309135],
[-0.28268765133171936, -3.0614754098360657],
[-0.12106537530266226, -3.063231850117096],
[0.02421307506053294, -3.0403981264637006],
[0.17857142857142905, -3.0193208430913354],
[0.35108958837772075, -2.9982435597189707],
[0.48910411622276007, -2.9718969555035133],
[0.7142857142857117, -2.9578454332552693],
[0.8087167070217864, -2.927985948477754],
[0.9485472154963652, -2.880562060889931],
[1.0774818401937045, -2.827868852459017],
[1.2173123486682802, -2.725995316159251],
[1.3353510895883773, -2.64344262295082],
[1.4261501210653753, -2.5802107728337234],
[1.5187651331719114, -2.5152224824355986],
[1.6930992736077433, -2.3957845433255307],
[1.7693704600484228, -2.351873536299768],
[1.861985472154962, -2.3026932084309153],
[1.9673123486682789, -2.246487119437941],
[2.0853510895883747, -2.1814988290398145],
[2.148910411622272, -2.1165105386416907],
[2.21428571428571, -2.046252927400472],
[2.29055690072639, -1.9724824355971928],
[2.3686440677966054, -2.0005854800936747],
[2.435835351089584, -2.0286885245901622],
[2.4993946731234837, -2.048009367681498]
], dtype = np.float64).T,

"obs": {

"upper_error": np.array([
[-1, -2.7049180327868854],
[-0.8038740920096854, -2.671545667447307],
[-0.6004842615012105, -2.6978922716627642],
[-0.40799031476997527, -2.836651053864169],
[-0.20641646489104293, -2.817330210772834],
[-0.012106537530267802, -2.662763466042154],
[0.18946731234866743, -2.518735362997658],
[0.39104116222760377, -2.511709601873537],
[0.5490314769975786, -2.2148711943793917],
[0.8123486682808716, -2.1129976580796233],
[0.9830508474576272, -2.2429742388758784],
[1.1900726392251824, -1.8829039812646373],
[1.4170702179176748, -1.3963700234192042],
[1.5932203389830515, -1.0731850117096011],
[1.7766343825665856, -1.06440281030445],
[1.9891041162227605, -1.090749414519906],
[2.216101694915255, -0.5128805620608903],
[2.3995157384987884, -0.5480093676814993]
], dtype = np.float64).T,

"lower_error": np.array([
[-1, -2.910421545667448],
[-0.8020581113801455, -2.8261124121779866],
[-0.6004842615012116, -2.8928571428571437],
[-0.40799031476997616, -3.0632318501170968],
[-0.20641646489104115, -3.131733021077283],
[-0.013922518159805497, -2.885831381733021],
[0.18946731234866787, -2.7330210772833734],
[0.391041162227602, -2.79976580796253],
[0.5490314769975786, -2.427400468384075],
[0.8123486682808707, -2.3852459016393452],
[0.9794188861985464, -2.4502341920374704],
[1.1900726392251801, -2.334309133489461],
[1.4170702179176753, -1.617681498829041],
[1.5932203389830506, -1.4297423887587837],
[1.7784503631961264, -1.3542154566744726],
[1.9872881355932202, -1.4385245901639356],
[2.2161016949152543, -1.370023419203747],
[2.40133171912833, -1.148711943793912]
], dtype = np.float64).T,

"centre": np.array([
[-1, -2.7944964871194373],
[-0.8020581113801454, -2.752341920374708],
[-0.6004842615012114, -2.7944964871194378],
[-0.40799031476997616, -2.940281030444965],
[-0.20460048426150101, -2.9508196721311486],
[-0.012106537530266692, -2.761124121779859],
[0.18946731234866832, -2.618852459016394],
[0.3910411622276033, -2.6504683840749417],
[0.5490314769975786, -2.3044496487119446],
[0.8105326876513312, -2.276346604215457],
[0.9794188861985473, -2.3448477751756434],
[1.1900726392251824, -2.014637002341921],
[1.4170702179176757, -1.5333723653395797],
[1.5932203389830506, -1.2470725995316152],
[1.7766343825665842, -1.2365339578454342],
[1.9891041162227618, -1.282201405152225],
[2.2161016949152543, -1.099531615925061],
[2.3995157384987893, -0.9186182669789222]
], dtype = np.float64).T

}
}



data["obs"]["centre"][0] = np.mean(np.array([data["obs"]["centre"][0], data["obs"]["upper_error"][0], data["obs"]["lower_error"][0]]).T, axis = 1)
data["obs"]["upper_error"] = data["obs"]["upper_error"][1] - data["obs"]["centre"][1]
data["obs"]["lower_error"] = data["obs"]["centre"][1] - data["obs"]["lower_error"][1]



def plot_synthetic(colour = "green", label = "Turner+16 Q1317-0507 Model", axis = None):
    plotting_function = plt.plot if axis is None else axis.plot
    plotting_function(data["synthetic"][0],
                      data["synthetic"][1],
                      color = colour,
                      label = label)

def plot_obs(colour = "red", label = "Turner+16 Q1317-0507", axis = None):
    plotting_function = plt.errorbar if axis is None else axis.errorbar
    plotting_function(data["obs"]["centre"][0],
                      data["obs"]["centre"][1],
                      yerr = np.array([data["obs"]["lower_error"], data["obs"]["upper_error"]]),
                      fmt = "o",
                      linestyle = "",
                      capsize = 2,
                      color = colour,
                      label = label)
